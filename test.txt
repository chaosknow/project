git init			创建初始化git
git add	test.txt		提交到暂存区
git add .			将所有文件提交到暂存区
git status			查看状态（绿色表示在暂存区）
git rm --cached test.txt	将文件移出暂存区（红色表示在工作区）
git commit -m "第一次提交"	提交
				（没有写注释跳进群vim ，按i编辑填写注释，
				填写完毕按esc跳出，按：wq回去）

git log				查看历史记录
git reset --hard HEAD^		回退到上一次提交的版本（一个^回退一次
				用~3回退三次）

git reflog			查看所有记录（包括回退的）
git reset --hard 504b513	撤销回退 hard后面为标识符（标识符在					reflog里记录的开头）

git reset --soft HEAD^		将退后一次提交回退到暂存区（用于注释写错重					写重新进行commit、用于修复bug减少提交次					数）
git revert			回退上次提交版本但是log会生成记录
git branch			查看分支（最好不要在master上写代码，创建					master分支写，方便修改master的bug）

git branch ****			创建一个分支 ****为分支名称（切换之前					muster一定要提交完毕 否则回到muster之前写					的没有记录）

git checkout ****		切换分支  ****为分支名称（每次切换工作区要					先add到暂存区，在commit）

git checkout master		切到muster主支
git merge ****			合并分支到muster上（合并发生冲突 到vscode					进行选择需要更改的版本，或者打开冲突文件选					择留下什么版本，最后在add进去）

git branch -d ****		删除分支

git remote add origin https://github.com/chaosknow/project.git
让本地库知道远程库的地址

git remote -v 			查看远程库
git push origin master		把master推到远程库
git pull origin master		拉去远程库已更新的代码到本地库
